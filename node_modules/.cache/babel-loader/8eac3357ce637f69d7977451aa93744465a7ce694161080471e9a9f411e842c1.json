{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0e991e68\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"['task-item', getStatusColorClass()]\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"strong\", null, _toDisplayString($props.task.title), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Description: \" + _toDisplayString($props.task.description), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Creator: \" + _toDisplayString($props.task.creator), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Created on: \" + _toDisplayString($options.formatDate($props.task.createdOn)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Priority: \" + _toDisplayString($props.task.priority), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Status: \" + _toDisplayString($props.task.status), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$props","task","title","description","creator","$options","formatDate","createdOn","priority","status"],"sources":["/Users/jeevankumarkonduru/Library/Mobile Documents/com~apple~CloudDocs/Jeevan/UNH /Fall-2023/Web Database Application/FinalProject/jeevantask/src/components/TaskItem.vue"],"sourcesContent":["<template>\n  <div class=\"['task-item', getStatusColorClass()]\">\n    <strong>{{ task.title }}</strong>\n    <p>Description: {{ task.description }}</p>\n    <p>Creator: {{ task.creator }}</p>\n    <p>Created on: {{ formatDate(task.createdOn) }}</p>\n    <p>Priority: {{ task.priority }}</p>\n    <p>Status: {{ task.status }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    task: Object,\n  },\n  methods: {\n    formatDate(dateString) {\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.task-item {\n  padding: 10px;\n}\n\n/* Add more styles as needed */\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAsC;;uBAAjDC,mBAAA,CAOM,OAPNC,UAOM,GANJC,mBAAA,CAAiC,gBAAAC,gBAAA,CAAtBC,MAAA,CAAAC,IAAI,CAACC,KAAK,kBACrBJ,mBAAA,CAA0C,WAAvC,eAAa,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,IAAI,CAACE,WAAW,kBACnCL,mBAAA,CAAkC,WAA/B,WAAS,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,IAAI,CAACG,OAAO,kBAC3BN,mBAAA,CAAmD,WAAhD,cAAY,GAAAC,gBAAA,CAAGM,QAAA,CAAAC,UAAU,CAACN,MAAA,CAAAC,IAAI,CAACM,SAAS,mBAC3CT,mBAAA,CAAoC,WAAjC,YAAU,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,IAAI,CAACO,QAAQ,kBAC7BV,mBAAA,CAAgC,WAA7B,UAAQ,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,IAAI,CAACQ,MAAM,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}